@inject IJSRuntime JS

<div id="sidebar">
    <div class="sidebar-header">
        <span class="sidebar-brand">Admin</span>
        <button id="closeBtn" class="sidebar-close">✖</button>
    </div>

    <nav class="sidebar-nav">
        <a href="/Dash" class="nav-link">
            <i class="fa-solid fa-house" style="color: #ffffff;"></i>
            <span class="text">Home</span>
        </a>

        <div class="nav-item has-submenu">
            <button class="nav-link submenu-toggle">
                <i class="fa-solid fa-database" style="color: #ffffff;"></i>
                <span class="text">Products</span>
                <i class="icon fa-solid fa-chevron-down" style="color: #ffffff;"></i>
            </button>
            <div class="submenu">
                <a href="/Admin/Add/Product" class="nav-link">Add Product</a>
                <a href="/Admin/Products" class="nav-link">All Products</a>
            </div>
        </div>

        <div class="nav-item has-submenu">
            <button class="nav-link submenu-toggle">
                <i class="fa-solid fa-cubes"></i>
                <span class="text">Orders</span>
                <i class="icon fa-solid fa-chevron-down" style="color: #ffffff;"></i>
            </button>
            <div class="submenu">
                <a href="/Admin/Orders/Delivering" class="nav-link">Orders Delivering</a>
                <a href="/Admin/Orders/Preparing" class="nav-link">Orders Preparing</a>
                <a href="/Admin/Orders" class="nav-link">Recent Orders</a>
                <a href="/Admin/Orders/All" class="nav-link">All Orders</a>
            </div>
        </div>        
    </nav>
</div>


<!-- Open Button -->
<button id="openBtn" class="sidebar-toggle">☰</button>

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("sidebarHandler.init");
        }
    }
}


