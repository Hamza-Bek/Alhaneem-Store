@using Application.Dtos.Product
@inject IProductService ProductService
@inject ICartService CartService
@inject IJSRuntime JS
@inject NavigationManager NavigationManager

<div class="product-list">
    @if (products == null)
    {
        <p>Loading products...</p>
    }
    else if (!products.Any())
    {
        <p>No products found.</p>
    }
    else
    {
        @foreach (var product in products)
        {
            <div class="product-card">
                <img src="@product.ImageUrls.FirstOrDefault()" alt="@product.Name">
                <h3>@product.Name</h3>
                <p>@product.Price EGP</p>
                <div class="button-wrapper">
                    <a class="view-btn" @onclick="() => NavigateToProductView(product.Id)">
                        <i class="fa-solid fa-up-right-from-square"></i>
                    </a>
                    <button class="add-to-cart-btn" @onclick="() => AddToCart(product.Id)">
                        Add to Cart
                    </button>
                </div>
            </div>
        }
    }
</div>

@code {
    private List<PublicProductDto> products = new();    
    private string? sessionId;

    protected override async Task OnInitializedAsync()
    {
        sessionId = await JS.InvokeAsync<string>("sessionHelper.getSessionId");

        if (string.IsNullOrWhiteSpace(sessionId))
        {
            sessionId = Guid.NewGuid().ToString();
            await CartService.CreateCartAsync(sessionId);
            await JS.InvokeVoidAsync("sessionHelper.setSessionId", sessionId);
        }

        products = await ProductService.GetAllProductsAsync();
    }

    private async Task AddToCart(Guid productId)
    {
        if (sessionId == null) return;

        var response = await CartService.UpdateItemQuantityAsync(productId, 1, sessionId);

        await JS.InvokeVoidAsync("showToast", "Added Successfully", "success");
    }

    private void NavigateToProductView(Guid productId)
    {
        NavigationManager.NavigateTo($"/Product/View/{productId}");
    }
}