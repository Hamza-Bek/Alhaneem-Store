@inject IProductAdminService ProductService

<h2>Product List</h2>
<div class="table-wrapper">
    <table class="product-table">
        <thead>
            <tr>
                <th>Image</th>
                <th>Title</th>
                <th>Description</th>
                <th>Price</th>
                <th>Cost</th>
                <th>Category</th>
                <th>Published</th>
                <th>Added At</th>                
                <th>Stock</th>
                <th>Stock Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var product in products)
            {
                <tr>
                    <td data-label="Image"><img src="@product.ImageUrls.FirstOrDefault()" alt="Product" class="product-img" /></td>
                    <td data-label="Title">@product.Name</td>
                    <td data-label="Description">@string.Join(" ", product.Description?.Split(' ').Take(2) ?? Enumerable.Empty<string>())</td>
                    <td data-label="Price">@product.Price</td>
                    <td data-label="Cost">@product.Cost</td>
                    <td data-label="Category">@product.CategoryId</td>
                    <td data-label="Published">@product.isPublished</td>
                    <td data-label="Added At">@product.CreatedAt</td>                    
                    <td data-label="Stock">@product.Stock</td>
                    <td data-label="Stock Status"><span class="status in-stock">@product.StockStatus</span></td>
                    <td data-label="Actions">
                        <div class="action-buttons">
                            <button class="view">View</button>
                            <button class="edit">Edit</button>
                            <button class="delete">Delete</button>
                        </div>
                    </td>
                </tr>
            }          
        </tbody>
    </table>
</div>

@code{
    private List<ProductDto> products = new();

    protected async override Task OnInitializedAsync()
    {
        products = await ProductService.GetAllProductsAsync();
    }
}               